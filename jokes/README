# Introduction

Jokes application is implemented to support storing, reading, likeing and dislikeing jokes, for demo purposes.

# User Manual

In order to run the application, it is required to have following in place:
  - JRE 8 installed
  - PostgreSQL 9.6 installed with database avilable, with following properties:
      - url: localhost:5432/demo
      - username/password: postgres/postgres
      
To run the application, it is required to execute following command in the directory where .jar file is available: java -jar jokes-0.0.1-SNAPSHOT.jar.

To reach the application, it is required to type the correct link in the browser:
  - http://localhost:8080/ to see the list of jokes
  - http://localhost:8080/new to be able to add a new joke 

# Technologies used:
  - Java
  - Spring Boot
  - Postgres + Flyway
  - Hibernate
  - Thymeleaf
  
# System architecture

System is implemented as Spring MVC application. Logically, it is divided in 3 layers:
  - controller (JokesController.java): entry point to the application. Componet which takes care of handling requests, and returning responses to the browser.
  - business layer (JokesService.java): component which takes care of executing the business rules, preparing data to be displayed to the user, and processing data sent to the server.
  - data access layer: component which takes care of storing data to the data base.
